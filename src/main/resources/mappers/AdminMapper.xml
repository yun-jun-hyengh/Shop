<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shopping.shop.mapper.AdminMapper">
	<!-- 총 회원수 -->
	<select id="getTotalMember" resultType="int">
		select count(*) from member
	</select>
	
	<!-- 상위 5개 회원 리스트 -->
	<select id="memberList" resultType="com.shopping.shop.vo.MemberVO">
		select m.memberNum, m.memberId, m.memberName, m.memberPhoneNumber,
		m.memberEmail, m.point, g.codeName from member m
		inner join grade g
		on m.tier = g.code
		order by memberNum desc limit 5
	</select>
	
	
	<!-- 전체 회원 리스트 -->
	<select id="memberCriteria" resultType="com.shopping.shop.vo.MemberVO">
		select m.memberNum, m.memberId, m.memberName, m.memberPhoneNumber,
		m.memberEmail, m.point, m.adminCk, g.codeName from member m
		inner join grade g
		on m.tier = g.code
		order by m.memberNum limit #{startPage}, #{numPerPage}
	</select>
	
	<!-- 회원 검색 리스트 -->
	<select id="allMemberList" resultType="com.shopping.shop.vo.MemberVO">
		<![CDATA[
			select m.memberNum, m.memberId, m.memberName, m.memberPhoneNumber,
			m.memberEmail, m.point, m.adminCk, g.codeName from member m
			inner join grade g
			on m.tier = g.code
			]]>
			<include refid="findSql"></include>
		<![CDATA[
			order by m.memberNum limit #{startPage}, #{numPerPage}
		]]>
	</select>
	
	<select id="findMemberCountData" resultType="int">
		<![CDATA[
			select count(memberNum) from member where memberNum > 0
		]]>
		<include refid="findSql"></include>
	</select>
	
	<!-- 검색 키워드  설정-->
	<sql id="findSql">
		<if test="findType != null">
			<if test="findType == 'N'.toString()">
				and memberName like CONCAT('%',#{keyword},'%')
			</if>
			<if test="findType == 'P'.toString()">
				and memberPhoneNumber like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="findType == 'NP'.toString()">
				and (memberName like CONCAT('%', #{keyword}, '%') 
				or memberPhoneNumber like CONCAT('%', #{keyword}, '%'))
			</if>
		</if>
	</sql>
	
	<!-- 회원권한변경 -->
	<update id="gradeUpdate">
		update member set adminCk = #{adminCk} where memberNum = #{memberNum}
	</update>
	
	<!-- 회원 엑셀 다운로드 -->
	<select id="selectExcel" parameterType="com.shopping.shop.vo.MemberVO" resultType="com.shopping.shop.vo.MemberVO">
		select m.memberNum, m.memberId, m.memberName, m.memberPhoneNumber,
		m.memberEmail, m.point, m.adminCk, g.codeName, m.address1, m.address2, m.address3
		from member m
		inner join grade g
		on m.tier = g.code
	</select>
</mapper>